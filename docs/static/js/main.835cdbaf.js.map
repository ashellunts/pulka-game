{"version":3,"file":"static/js/main.835cdbaf.js","mappings":"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","sources":["index.js"],"sourcesContent":["document.body.style.overflow = 'hidden'; // Prevent body overflow\ndocument.documentElement.style.overflow = 'hidden'; // Prevent html overflow\n\nconst canvas = document.createElement('canvas');\ncanvas.style.overflow = 'hidden'; // Prevent vertical scroll\ncanvas.style.display = 'block'; // Ensure canvas takes full width\n\nconst ctx = canvas.getContext('2d');\ndocument.body.appendChild(canvas);\n\nlet playerPos = { x: 50, y: 50 };\nlet canvasSize = { width: window.innerWidth, height: window.innerHeight };\nlet gameWon = false;\nlet gameLost = false;\nlet bullets = [];\nlet lastBulletTime = 0;\nconst goalWidth = 100;\nconst goalHeight = 95;\nlet waitforNextLevel = true;\n\nconst levelCount = 5;\n\n// Load player image\nconst playerImage = new Image();\nplayerImage.src = '/pulka-game/player.jpg';\n\n// Load bullet image\nconst bulletImage = new Image();\nbulletImage.src = '/pulka-game/bullet.png';\n\nconst finishImage = new Image();\nfinishImage.src = '/pulka-game/finish.png';\n\n// Calculate new dimensions\nconst originalWidth = 520;\nconst originalHeight = 900;\nconst scaleFactor = 1/25;\nconst playerWidth = originalWidth * scaleFactor;\nconst playerHeight = originalHeight * scaleFactor;\n\n// Track the state of arrow keys\nconst keys = {\n  ArrowUp: false,\n  ArrowDown: false,\n  ArrowLeft: false,\n  ArrowRight: false\n};\n\nlet isTouching = false;\nlet isMouseDown = false;\n\nfunction resizeCanvas() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  canvasSize = { width: canvas.width, height: canvas.height };\n}\n\nfunction handleKeyDown(e) {\n  if (keys.hasOwnProperty(e.key)) {\n    keys[e.key] = true;\n  }\n}\n\nfunction handleKeyUp(e) {\n  if (keys.hasOwnProperty(e.key)) {\n    keys[e.key] = false;\n  }\n}\n\nfunction handleTouchStart(e) {\n  isTouching = true;\n  const touch = e.touches ? e.touches[0] : e;\n  const touchX = touch.clientX;\n  const touchY = touch.clientY;\n\n  updatePlayerDirection(touchX, touchY);\n}\n\nfunction handleTouchMove(e) {\n  if (isTouching) {\n    const touch = e.touches ? e.touches[0] : e;\n    const touchX = touch.clientX;\n    const touchY = touch.clientY;\n\n    updatePlayerDirection(touchX, touchY);\n  }\n}\n\nfunction handleTouchEnd(e) {\n  isTouching = false;\n  keys.ArrowUp = false;\n  keys.ArrowDown = false;\n  keys.ArrowLeft = false;\n  keys.ArrowRight = false;\n}\n\nfunction handleMouseDown(e) {\n  isMouseDown = true;\n  const mouseX = e.clientX;\n  const mouseY = e.clientY;\n\n  updatePlayerDirection(mouseX, mouseY);\n}\n\nfunction handleMouseMove(e) {\n  if (isMouseDown) {\n    const mouseX = e.clientX;\n    const mouseY = e.clientY;\n\n    updatePlayerDirection(mouseX, mouseY);\n  }\n}\n\nfunction handleMouseUp(e) {\n  isMouseDown = false;\n  keys.ArrowUp = false;\n  keys.ArrowDown = false;\n  keys.ArrowLeft = false;\n  keys.ArrowRight = false;\n}\n\nfunction updatePlayerDirection(x, y) {\n  if (y < playerPos.y) {\n    keys.ArrowUp = true;\n    keys.ArrowDown = false;\n  } else if (y > playerPos.y + playerHeight) {\n    keys.ArrowDown = true;\n    keys.ArrowUp = false;\n  } else {\n    keys.ArrowUp = false;\n    keys.ArrowDown = false;\n  }\n\n  if (x < playerPos.x) {\n    keys.ArrowLeft = true;\n    keys.ArrowRight = false;\n  } else if (x > playerPos.x + playerWidth) {\n    keys.ArrowRight = true;\n    keys.ArrowLeft = false;\n  } else {\n    keys.ArrowLeft = false;\n    keys.ArrowRight = false;\n  }\n}\n\nlet currentLevel = 1;\nlet newBulletMilliseconds = 1000; // Level 1\nif (/Mobi|Android/i.test(navigator.userAgent)) {\n  newBulletMilliseconds = newBulletMilliseconds / 2;\n}\n\nfunction startLevel() {\n  playerPos = { x: 50, y: 50 };\n  bullets = [];\n  gameWon = false;\n  gameLost = false;\n  lastBulletTime = 0;\n  ctx.clearRect(0, 0, canvasSize.width, canvasSize.height);\n  ctx.fillStyle = 'black';\n  ctx.font = '40px Arial';\n  ctx.fillText('Pulka', canvasSize.width / 2 - 50, canvasSize.height / 2 - 60);\n  ctx.font = '30px Arial';\n  ctx.fillText(`Level ${currentLevel}`, canvasSize.width / 2 - 70, canvasSize.height / 2);\n  ctx.font = '20px Arial';\n  ctx.fillText('Press (s) to start the level', canvasSize.width / 2 - 125, canvasSize.height / 2 + 40);\n  showStartButton();\n}\n\nfunction gameLoop(timestamp) {\n  ctx.clearRect(0, 0, canvasSize.width, canvasSize.height);\n\n  // Update player position based on keys pressed\n  const speed = 5;\n  if (keys.ArrowUp) {\n    playerPos.y = Math.max(0, playerPos.y - speed);\n  }\n  if (keys.ArrowDown) {\n    playerPos.y = Math.min(canvasSize.height - playerHeight, playerPos.y + speed);\n  }\n  if (keys.ArrowLeft) {\n    playerPos.x = Math.max(0, playerPos.x - speed);\n  }\n  if (keys.ArrowRight) {\n    playerPos.x = Math.min(canvasSize.width - playerWidth, playerPos.x + speed);\n  }\n\n  // Draw goal\n  ctx.fillStyle = 'green';\n  // ctx.fillRect(canvasSize.width - goalWidth, (canvasSize.height - goalHeight) / 2, goalWidth, goalHeight);\n\n  // Draw finish line\n  ctx.drawImage(finishImage, canvasSize.width - goalWidth, (canvasSize.height - goalHeight) / 2, goalWidth, goalHeight);\n\n  // Draw level in up left corner\n  ctx.fillStyle = 'black';\n  ctx.font = '20px Arial';\n  ctx.fillText(`Level ${currentLevel}`, 10, 30);\n\n  // Draw player\n  ctx.drawImage(playerImage, playerPos.x, playerPos.y, playerWidth, playerHeight);\n\n  // Create new bullet every second\n  if (timestamp - lastBulletTime > newBulletMilliseconds) {\n    bullets.push({ x: canvasSize.width - 100, y: Math.random() * canvasSize.height });\n    lastBulletTime = timestamp;\n  }\n  // Draw and update bullets\n  bullets = bullets.filter(bullet => {\n    ctx.drawImage(bulletImage, bullet.x, bullet.y, 20, 5);\n\n    // Check collision with player\n    if (bullet.x <= playerPos.x + playerWidth && bullet.x + 20 >= playerPos.x &&\n        bullet.y <= playerPos.y + playerHeight && bullet.y + 5 >= playerPos.y) {\n      gameLost = true;\n    }\n\n    bullet.x -= 5;\n    return bullet.x > -10;\n  });\n\n  // Check win condition\n  if (playerPos.x + playerWidth > canvasSize.width - goalWidth &&\n      playerPos.y + playerHeight > (canvasSize.height - goalHeight) / 2 &&\n      playerPos.y < (canvasSize.height + goalHeight) / 2) {\n    gameWon = true;\n  }\n\n  if (gameWon) {\n    waitforNextLevel = true;\n    currentLevel = currentLevel + 1;\n    console.log(\"currentLevel\", currentLevel);\n    if (currentLevel > levelCount) {\n      // Game completed\n      ctx.fillText('You Win! 🎉', canvasSize.width / 2 - 70, canvasSize.height / 2);\n      ctx.fillText('Press (r) to restart the game', canvasSize.width / 2 - 170, canvasSize.height / 2 + 40);\n      showRestartButton();\n    } else {\n\n      if (currentLevel === 2) {\n        newBulletMilliseconds = 500;\n      } else if (currentLevel === 3) {\n        newBulletMilliseconds = 300;\n      } else if (currentLevel === 4) {\n        newBulletMilliseconds = 250;\n      } else if (currentLevel === 5) {\n        newBulletMilliseconds = 230;\n      }\n\n      if (/Mobi|Android/i.test(navigator.userAgent)) {\n        newBulletMilliseconds = newBulletMilliseconds / 2;\n      }\n\n      startLevel(); // Show level name\n    }\n  }\n\n  if (gameLost) {\n    ctx.fillStyle = 'black';\n    ctx.font = '30px Arial';\n    ctx.fillText('You Lose! 💥', canvasSize.width / 2 - 70, canvasSize.height / 2);\n    ctx.fillText('Press (r) to restart the game', canvasSize.width / 2 - 170, canvasSize.height / 2 + 40);\n    showRestartButton();\n  }\n\n  if (!gameWon && !gameLost && !waitforNextLevel) {\n    requestAnimationFrame(gameLoop);\n  }\n}\n\nfunction showStartButton() {\n  const startButton = document.createElement('button');\n  startButton.innerText = 'Start Level';\n  startButton.style.position = 'absolute';\n  startButton.style.left = '50%';\n  startButton.style.top = '50%';\n  startButton.style.transform = 'translate(-50%, -50%)';\n  startButton.style.padding = '10px 20px';\n  startButton.style.fontSize = '20px';\n  document.body.appendChild(startButton);\n\n  startButton.addEventListener('click', () => {\n    waitforNextLevel = false;\n    startButton.remove();\n    requestAnimationFrame(gameLoop);\n  });\n}\n\nfunction showRestartButton() {\n  const restartButton = document.createElement('button');\n  restartButton.innerText = 'Restart Game';\n  restartButton.style.position = 'absolute';\n  restartButton.style.left = '50%';\n  restartButton.style.top = '60%';\n  restartButton.style.transform = 'translate(-50%, -50%)';\n  restartButton.style.padding = '10px 20px';\n  restartButton.style.fontSize = '20px';\n  document.body.appendChild(restartButton);\n\n  restartButton.addEventListener('click', () => {\n    playerPos = { x: 50, y: 50 };\n    bullets = [];\n    gameWon = false;\n    gameLost = false;\n    lastBulletTime = 0;\n    currentLevel = 1; // Reset to level 1\n    newBulletMilliseconds = 1000; // Reset bullet interval\n    if (/Mobi|Android/i.test(navigator.userAgent)) {\n      newBulletMilliseconds = newBulletMilliseconds / 2;\n    }\n    resizeCanvas(); // Reset canvas size if needed\n    restartButton.remove();\n    startLevel();\n  });\n}\n\nwindow.addEventListener('keydown', handleKeyDown);\nwindow.addEventListener('keyup', handleKeyUp);\nwindow.addEventListener('resize', resizeCanvas);\ncanvas.addEventListener('touchstart', handleTouchStart);\ncanvas.addEventListener('touchmove', handleTouchMove);\ncanvas.addEventListener('touchend', handleTouchEnd);\ncanvas.addEventListener('mousedown', handleMouseDown);\ncanvas.addEventListener('mousemove', handleMouseMove);\ncanvas.addEventListener('mouseup', handleMouseUp);\n\nresizeCanvas();\nstartLevel();\n"],"names":["document","body","style","overflow","documentElement","canvas","createElement","display","ctx","getContext","appendChild","playerPos","x","y","canvasSize","width","window","innerWidth","height","innerHeight","gameWon","gameLost","bullets","lastBulletTime","goalWidth","goalHeight","waitforNextLevel","levelCount","playerImage","Image","src","bulletImage","finishImage","playerWidth","originalWidth","playerHeight","originalHeight","keys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","isTouching","isMouseDown","resizeCanvas","updatePlayerDirection","currentLevel","newBulletMilliseconds","startLevel","clearRect","fillStyle","font","fillText","concat","startButton","innerText","position","left","top","transform","padding","fontSize","addEventListener","remove","requestAnimationFrame","gameLoop","showStartButton","timestamp","Math","max","min","drawImage","push","random","filter","bullet","console","log","showRestartButton","test","navigator","userAgent","restartButton","e","hasOwnProperty","key","touch","touches","clientX","clientY"],"sourceRoot":""}