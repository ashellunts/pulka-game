{"version":3,"file":"static/js/main.277e9f67.js","mappings":"YAAAA,SAASC,KAAKC,MAAMC,SAAW,SAC/BH,SAASI,gBAAgBF,MAAMC,SAAW,SAE1C,IAAME,EAASL,SAASM,cAAc,UACtCD,EAAOH,MAAMC,SAAW,SACxBE,EAAOH,MAAMK,QAAU,QAEvB,IAAMC,EAAMH,EAAOI,WAAW,MAC9BT,SAASC,KAAKS,YAAYL,GAE1B,IAAIM,EAAY,CAAEC,EAAG,GAAIC,EAAG,IACxBC,EAAa,CAAEC,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,aACxDC,GAAU,EACVC,GAAW,EACXC,EAAU,GACVC,EAAiB,EACfC,EAAY,IACZC,EAAa,GACfC,GAAmB,EAEjBC,EAAa,EAGbC,EAAc,IAAIC,MACxBD,EAAYE,IAAM,yBAGlB,IAAMC,EAAc,IAAIF,MACxBE,EAAYD,IAAM,yBAElB,IAAME,EAAc,IAAIH,MACxBG,EAAYF,IAAM,yBAGlB,IAGMG,EAAcC,KACdC,EAAeC,GAGfC,EAAO,CACXC,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,YAAY,GAGd,SAASC,IACPrC,EAAOU,MAAQC,OAAOC,WACtBZ,EAAOa,OAASF,OAAOG,YACvBL,EAAa,CAAEC,MAAOV,EAAOU,MAAOG,OAAQb,EAAOa,OACrD,CAwCA,IAAIyB,EAAe,EACfC,EAAwB,IAE5B,SAASC,IACPlC,EAAY,CAAEC,EAAG,GAAIC,EAAG,IACxBS,EAAU,GACVF,GAAU,EACVC,GAAW,EACXE,EAAiB,EACjBf,EAAIsC,UAAU,EAAG,EAAGhC,EAAWC,MAAOD,EAAWI,QACjDV,EAAIuC,UAAY,QAChBvC,EAAIwC,KAAO,aACXxC,EAAIyC,SAAS,QAASnC,EAAWC,MAAQ,EAAI,IAAK,KAClDP,EAAIwC,KAAO,aACXxC,EAAIyC,SAAS,SAADC,OAAUP,GAAgB7B,EAAWC,MAAQ,EAAI,GAAID,EAAWI,OAAS,GACrFV,EAAIwC,KAAO,aACXxC,EAAIyC,SAAS,+BAAgCnC,EAAWC,MAAQ,EAAI,IAAKD,EAAWI,OAAS,EAAI,GACnG,CAEA,SAASiC,EAASC,GAChB5C,EAAIsC,UAAU,EAAG,EAAGhC,EAAWC,MAAOD,EAAWI,QAI7CmB,EAAKC,UACP3B,EAAUE,EAAIwC,KAAKC,IAAI,EAAG3C,EAAUE,EAFxB,IAIVwB,EAAKE,YACP5B,EAAUE,EAAIwC,KAAKE,IAAIzC,EAAWI,OAASiB,EAAcxB,EAAUE,EALvD,IAOVwB,EAAKG,YACP7B,EAAUC,EAAIyC,KAAKC,IAAI,EAAG3C,EAAUC,EARxB,IAUVyB,EAAKI,aACP9B,EAAUC,EAAIyC,KAAKE,IAAIzC,EAAWC,MAAQkB,EAAatB,EAAUC,EAXrD,IAedJ,EAAIuC,UAAY,QAIhBvC,EAAIgD,UAAUxB,EAAalB,EAAWC,MAAQS,GAAYV,EAAWI,OAASO,GAAc,EAAGD,EAAWC,GAG1GjB,EAAIuC,UAAY,QAChBvC,EAAIwC,KAAO,aACXxC,EAAIyC,SAAS,SAADC,OAAUP,GAAgB,GAAI,IAG1CnC,EAAIgD,UAAU5B,EAAajB,EAAUC,EAAGD,EAAUE,EAAGoB,EAAaE,GAG9DiB,EAAY7B,EAAiBqB,IAC/BtB,EAAQmC,KAAK,CAAE7C,EAAGE,EAAWC,MAAQ,IAAKF,EAAGwC,KAAKK,SAAW5C,EAAWI,SACxEK,EAAiB6B,GAGnB9B,EAAUA,EAAQqC,QAAO,SAAAC,GAUvB,OATApD,EAAIgD,UAAUzB,EAAa6B,EAAOhD,EAAGgD,EAAO/C,EAAG,GAAI,GAG/C+C,EAAOhD,GAAKD,EAAUC,EAAIqB,GAAe2B,EAAOhD,EAAI,IAAMD,EAAUC,GACpEgD,EAAO/C,GAAKF,EAAUE,EAAIsB,GAAgByB,EAAO/C,EAAI,GAAKF,EAAUE,IACtEQ,GAAW,GAGbuC,EAAOhD,GAAK,EACLgD,EAAOhD,GAAK,EACrB,IAGID,EAAUC,EAAIqB,EAAcnB,EAAWC,MAAQS,GAC/Cb,EAAUE,EAAIsB,GAAgBrB,EAAWI,OAASO,GAAc,GAChEd,EAAUE,GAAKC,EAAWI,OAASO,GAAc,IACnDL,GAAU,GAGRA,IACFM,GAAmB,EACnBiB,GAA8B,EAC9BkB,QAAQC,IAAI,eAAgBnB,GACxBA,EAAehB,GAEjBnB,EAAIyC,SAAS,wBAAenC,EAAWC,MAAQ,EAAI,GAAID,EAAWI,OAAS,GAC3EV,EAAIyC,SAAS,gCAAiCnC,EAAWC,MAAQ,EAAI,IAAKD,EAAWI,OAAS,EAAI,MAG7E,IAAjByB,EACFC,EAAwB,IACE,IAAjBD,EACTC,EAAwB,IACE,IAAjBD,EACTC,EAAwB,IACE,IAAjBD,IACTC,EAAwB,KAG1BC,MAIAxB,IACFb,EAAIuC,UAAY,QAChBvC,EAAIwC,KAAO,aACXxC,EAAIyC,SAAS,yBAAgBnC,EAAWC,MAAQ,EAAI,GAAID,EAAWI,OAAS,GAC5EV,EAAIyC,SAAS,gCAAiCnC,EAAWC,MAAQ,EAAI,IAAKD,EAAWI,OAAS,EAAI,KAG/FE,GAAYC,GAAaK,GAC5BqC,sBAAsBZ,EAE1B,CAEAnC,OAAOgD,iBAAiB,WAxJxB,SAAuBC,GACrB,OAAI7C,GAAWC,IACC,MAAV4C,EAAEC,KAEJvD,EAAY,CAAEC,EAAG,GAAIC,EAAG,IACxBS,EAAU,GACVF,GAAU,EACVC,GAAW,EACXE,EAAiB,EACjBoB,EAAe,EACfC,EAAwB,IACxBF,SACAqB,sBAAsBZ,IAKtBzB,EACY,MAAVuC,EAAEC,KAAevB,GAAgBhB,GACnCD,GAAmB,EACnBmB,SACAkB,sBAAsBZ,SAGxB,OAGEd,EAAK8B,eAAeF,EAAEC,OACxB7B,EAAK4B,EAAEC,MAAO,GAElB,IA2HAlD,OAAOgD,iBAAiB,SAzHxB,SAAqBC,GACf5B,EAAK8B,eAAeF,EAAEC,OACxB7B,EAAK4B,EAAEC,MAAO,EAElB,IAsHAlD,OAAOgD,iBAAiB,SAAUtB,GAElCA,IACAG,G","sources":["index.js"],"sourcesContent":["document.body.style.overflow = 'hidden'; // Prevent body overflow\ndocument.documentElement.style.overflow = 'hidden'; // Prevent html overflow\n\nconst canvas = document.createElement('canvas');\ncanvas.style.overflow = 'hidden'; // Prevent vertical scroll\ncanvas.style.display = 'block'; // Ensure canvas takes full width\n\nconst ctx = canvas.getContext('2d');\ndocument.body.appendChild(canvas);\n\nlet playerPos = { x: 50, y: 50 };\nlet canvasSize = { width: window.innerWidth, height: window.innerHeight };\nlet gameWon = false;\nlet gameLost = false;\nlet bullets = [];\nlet lastBulletTime = 0;\nconst goalWidth = 100;\nconst goalHeight = 95;\nlet waitforNextLevel = true;\n\nconst levelCount = 5;\n\n// Load player image\nconst playerImage = new Image();\nplayerImage.src = '/pulka-game/player.jpg';\n\n// Load bullet image\nconst bulletImage = new Image();\nbulletImage.src = '/pulka-game/bullet.png';\n\nconst finishImage = new Image();\nfinishImage.src = '/pulka-game/finish.png';\n\n// Calculate new dimensions\nconst originalWidth = 520;\nconst originalHeight = 900;\nconst scaleFactor = 1/25;\nconst playerWidth = originalWidth * scaleFactor;\nconst playerHeight = originalHeight * scaleFactor;\n\n// Track the state of arrow keys\nconst keys = {\n  ArrowUp: false,\n  ArrowDown: false,\n  ArrowLeft: false,\n  ArrowRight: false\n};\n\nfunction resizeCanvas() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  canvasSize = { width: canvas.width, height: canvas.height };\n}\n\nfunction handleKeyDown(e) {\n  if (gameWon || gameLost) {\n    if (e.key === 'r') {\n      // Restart the game\n      playerPos = { x: 50, y: 50 };\n      bullets = [];\n      gameWon = false;\n      gameLost = false;\n      lastBulletTime = 0;\n      currentLevel = 1; // Reset to level 1\n      newBulletMilliseconds = 1000; // Reset bullet interval\n      resizeCanvas(); // Reset canvas size if needed\n      requestAnimationFrame(gameLoop); // Restart the game loop\n      return;\n    }\n  }\n\n  if (waitforNextLevel) {\n    if (e.key === 's' && currentLevel <= levelCount) {\n      waitforNextLevel = false;\n      startLevel();\n      requestAnimationFrame(gameLoop);\n      return;\n    }\n    return;\n  }\n\n  if (keys.hasOwnProperty(e.key)) {\n    keys[e.key] = true;\n  }\n}\n\nfunction handleKeyUp(e) {\n  if (keys.hasOwnProperty(e.key)) {\n    keys[e.key] = false;\n  }\n}\n\nlet currentLevel = 1;\nlet newBulletMilliseconds = 1000; // Level 1\n\nfunction startLevel() {\n  playerPos = { x: 50, y: 50 };\n  bullets = [];\n  gameWon = false;\n  gameLost = false;\n  lastBulletTime = 0;\n  ctx.clearRect(0, 0, canvasSize.width, canvasSize.height);\n  ctx.fillStyle = 'black';\n  ctx.font = '80px Arial';\n  ctx.fillText('Pulka', canvasSize.width / 2 - 120, 100);\n  ctx.font = '30px Arial';\n  ctx.fillText(`Level ${currentLevel}`, canvasSize.width / 2 - 70, canvasSize.height / 2);\n  ctx.font = '20px Arial';\n  ctx.fillText('Press (s) to start the level', canvasSize.width / 2 - 125, canvasSize.height / 2 + 40);\n}\n\nfunction gameLoop(timestamp) {\n  ctx.clearRect(0, 0, canvasSize.width, canvasSize.height);\n\n  // Update player position based on keys pressed\n  const speed = 5;\n  if (keys.ArrowUp) {\n    playerPos.y = Math.max(0, playerPos.y - speed);\n  }\n  if (keys.ArrowDown) {\n    playerPos.y = Math.min(canvasSize.height - playerHeight, playerPos.y + speed);\n  }\n  if (keys.ArrowLeft) {\n    playerPos.x = Math.max(0, playerPos.x - speed);\n  }\n  if (keys.ArrowRight) {\n    playerPos.x = Math.min(canvasSize.width - playerWidth, playerPos.x + speed);\n  }\n\n  // Draw goal\n  ctx.fillStyle = 'green';\n  // ctx.fillRect(canvasSize.width - goalWidth, (canvasSize.height - goalHeight) / 2, goalWidth, goalHeight);\n\n  // Draw finish line\n  ctx.drawImage(finishImage, canvasSize.width - goalWidth, (canvasSize.height - goalHeight) / 2, goalWidth, goalHeight);\n\n  // Draw level in up left corner\n  ctx.fillStyle = 'black';\n  ctx.font = '20px Arial';\n  ctx.fillText(`Level ${currentLevel}`, 10, 30);\n\n  // Draw player\n  ctx.drawImage(playerImage, playerPos.x, playerPos.y, playerWidth, playerHeight);\n\n  // Create new bullet every second\n  if (timestamp - lastBulletTime > newBulletMilliseconds) {\n    bullets.push({ x: canvasSize.width - 100, y: Math.random() * canvasSize.height });\n    lastBulletTime = timestamp;\n  }\n  // Draw and update bullets\n  bullets = bullets.filter(bullet => {\n    ctx.drawImage(bulletImage, bullet.x, bullet.y, 20, 5);\n\n    // Check collision with player\n    if (bullet.x <= playerPos.x + playerWidth && bullet.x + 20 >= playerPos.x &&\n        bullet.y <= playerPos.y + playerHeight && bullet.y + 5 >= playerPos.y) {\n      gameLost = true;\n    }\n\n    bullet.x -= 5;\n    return bullet.x > -10;\n  });\n\n  // Check win condition\n  if (playerPos.x + playerWidth > canvasSize.width - goalWidth &&\n      playerPos.y + playerHeight > (canvasSize.height - goalHeight) / 2 &&\n      playerPos.y < (canvasSize.height + goalHeight) / 2) {\n    gameWon = true;\n  }\n\n  if (gameWon) {\n    waitforNextLevel = true;\n    currentLevel = currentLevel + 1;\n    console.log(\"currentLevel\", currentLevel);\n    if (currentLevel > levelCount) {\n      // Game completed\n      ctx.fillText('You Win! ðŸŽ‰', canvasSize.width / 2 - 70, canvasSize.height / 2);\n      ctx.fillText('Press (r) to restart the game', canvasSize.width / 2 - 170, canvasSize.height / 2 + 40);\n    } else {\n\n      if (currentLevel === 2) {\n        newBulletMilliseconds = 500;\n      } else if (currentLevel === 3) {\n        newBulletMilliseconds = 300;\n      } else if (currentLevel === 4) {\n        newBulletMilliseconds = 250;\n      } else if (currentLevel === 5) {\n        newBulletMilliseconds = 230;\n      }\n\n      startLevel(); // Show level name\n    }\n  }\n\n  if (gameLost) {\n    ctx.fillStyle = 'black';\n    ctx.font = '30px Arial';\n    ctx.fillText('You Lose! ðŸ’¥', canvasSize.width / 2 - 70, canvasSize.height / 2);\n    ctx.fillText('Press (r) to restart the game', canvasSize.width / 2 - 170, canvasSize.height / 2 + 40);\n  }\n\n  if (!gameWon && !gameLost && !waitforNextLevel) {\n    requestAnimationFrame(gameLoop);\n  }\n}\n\nwindow.addEventListener('keydown', handleKeyDown);\nwindow.addEventListener('keyup', handleKeyUp);\nwindow.addEventListener('resize', resizeCanvas);\n\nresizeCanvas();\nstartLevel();\n"],"names":["document","body","style","overflow","documentElement","canvas","createElement","display","ctx","getContext","appendChild","playerPos","x","y","canvasSize","width","window","innerWidth","height","innerHeight","gameWon","gameLost","bullets","lastBulletTime","goalWidth","goalHeight","waitforNextLevel","levelCount","playerImage","Image","src","bulletImage","finishImage","playerWidth","originalWidth","playerHeight","originalHeight","keys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","resizeCanvas","currentLevel","newBulletMilliseconds","startLevel","clearRect","fillStyle","font","fillText","concat","gameLoop","timestamp","Math","max","min","drawImage","push","random","filter","bullet","console","log","requestAnimationFrame","addEventListener","e","key","hasOwnProperty"],"sourceRoot":""}